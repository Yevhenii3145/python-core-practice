task = """
Рекурсия хорошо подходит к задаче flattening. Это процесс выравнивания списков, который
заключается в избавлении вложенной структуры. Например список вида [1, 2, [3, 4, [5, 6]], 7]
должен быть преобразован в плоский (flat) список [1, 2, 3, 4, 5, 6, 7]
Напишите функцию flatten, которая принимает на вход список, рекурсивно будет выравнивать этот
список и возвращать плоскую версию списка.

Для выполнения задачи МОЖНО следовать следующему алгоритму:
Если входной список пуст, то:
  возвращаем пустой список
Если первый элемент списка является списком, то:
  Получаем первый список, рекурсивно вызвав функцию с первым элементом списка
  Получаем второй список, рекурсивно вызвав функцию с остальным списком без первого элемента
  Возвращаем конкатенацию двух списков
Если первый элемент списка не является списком, то:
  Получаем первый список с первого элемента списка
  Получаем второй список, рекурсивно вызвав функцию с остальным списком без первого элемента
  Возвращаем конкатенацию двух списков
"""


def flatten(lst):
    flat_list = []
    for item in lst:
        if isinstance(item, list):
            flat_list.extend(flatten(item))
        else:
            flat_list.append(item)
    return flat_list


flatten([1, 2, [3, 4, [5, 6]], 7])
