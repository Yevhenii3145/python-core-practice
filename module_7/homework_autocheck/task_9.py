task = """
Подсписком (sublist) называют список, являющийся составной частью большего списка.
Подсписок может содержать один элемент, множество элементов, а также быть пустым.
Например, [1], [2], [3] и [4] являются подсписками списка [1, 2, 3, 4]. Список [2, 3]
также входит в состав [1, 2, 3, 4], но при этом список [2, 4] не является подсписком
[1, 2, 3, 4], поскольку в исходном списке числа 2 и 4 не соседствуют.
Пустой список является подсписком для любого списка.
Напишите функцию all_sub_lists, возвращающую список, содержащий все возможные подсписки заданного.
Например, если функции передан аргумент список [1, 2, 3], то функция должна вернуть следующий список:
[[], [1], [2], [3], [1, 2], [2, 3], [1, 2, 3]].
Функция all_sub_lists должна возвращать как минимум один список с пустым подсписком [[]].
"""

l = [4, 6, 1, 3]


def all_sub_lists(data):
    last_list = [[]]

    for i, _ in enumerate(data):
        last_ind = len(data) - 1
        roller = i
        for _ in range(i, last_ind + 1):
            if roller > last_ind:
                break
            arr = data[i: roller + 1]
            roller += 1
            last_list.append(arr)
    print(last_list)
    return last_list


# [[], [4], [4, 6], [4, 6, 1], [4, 6, 1, 3], [6], [6, 1], [6, 1, 3], [1], [1, 3], [3]]
all_sub_lists(l)

# ментор


def all_sub_lists_1(data):
    last_list = [[]]
    for roller in range(1, len(data) + 1):
        for i in range(0, len(data) - roller + 1):
            arr = data[i: i + roller]
            last_list.append(arr)
    print(last_list)
    return last_list
